// <auto-generated />
using System;
using JobPortalBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobPortalBackend.Migrations
{
    [DbContext(typeof(JobPortalContext))]
    [Migration("20250813093912_InitialSync")]
    partial class InitialSync
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("JobPortalBackend.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JobListingId")
                        .HasColumnType("int");

                    b.Property<int>("JobSeekerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("JobListingId");

                    b.HasIndex("JobSeekerProfileId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("JobPortalBackend.Models.EmployerProfile", b =>
                {
                    b.Property<int>("EmployerProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployerProfileId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyWebsite")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployerProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("EmployerProfiles");
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobListing", b =>
                {
                    b.Property<int>("JobListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobListingId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EmployerProfileId")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("MaxSalary")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("MinSalary")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("JobListingId");

                    b.HasIndex("EmployerProfileId");

                    b.ToTable("JobListings");
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobSeekerProfile", b =>
                {
                    b.Property<int>("JobSeekerProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobSeekerProfileId"));

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileURL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ResumeUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SavedJobIds")
                        .HasColumnType("longtext");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("JobSeekerProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("JobSeekerProfiles");
                });

            modelBuilder.Entity("JobPortalBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobPortalBackend.Models.Application", b =>
                {
                    b.HasOne("JobPortalBackend.Models.JobListing", null)
                        .WithMany("Applications")
                        .HasForeignKey("JobListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobPortalBackend.Models.JobSeekerProfile", null)
                        .WithMany("Applications")
                        .HasForeignKey("JobSeekerProfileId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("JobPortalBackend.Models.EmployerProfile", b =>
                {
                    b.HasOne("JobPortalBackend.Models.User", null)
                        .WithOne()
                        .HasForeignKey("JobPortalBackend.Models.EmployerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobListing", b =>
                {
                    b.HasOne("JobPortalBackend.Models.EmployerProfile", null)
                        .WithMany("JobListings")
                        .HasForeignKey("EmployerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobSeekerProfile", b =>
                {
                    b.HasOne("JobPortalBackend.Models.User", null)
                        .WithOne()
                        .HasForeignKey("JobPortalBackend.Models.JobSeekerProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobPortalBackend.Models.EmployerProfile", b =>
                {
                    b.Navigation("JobListings");
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobListing", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("JobPortalBackend.Models.JobSeekerProfile", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
